[env]
CARGO_TARGET_DIR = {value = "target", condition = {env_not_set = ["CARGO_TARGET_DIR"]}}
CARGO_WASM_PATH = "${CARGO_TARGET_DIR}/wasm32-unknown-unknown/release/${CARGO_MAKE_CRATE_NAME}.wasm"
CARGO_PROFILE = "dev"
TARGET_DIR = "target"
CARGO_MANIFEST_DIR = "${CARGO_MAKE_WORKING_DIRECTORY}"

[tasks.install-target-wasm32-unknown-unknown]
args = ["target", "install", "wasm32-unknown-unknown"]
command = "rustup"

[tasks.basic-http-server]
install_crate = {crate_name = "basic-http-server", binary = "basic-http-server", test_arg="--help"}

[tasks.wasm-bindgen-cli]
#Gotta install a slightly older verson of wasm-bindgen-cli
install_crate = {crate_name = "wasm-bindgen-cli", binary = "wasm-bindgen", test_arg="--help", min_version = "0.2.74"}

[tasks.sccache]
env = { "CARGO_MAKE_RUST_SCRIPT_PROVIDER" = "rust-script" }
script_runner = "@rust"
script = '''
use std::process::{Command, Stdio};

match Command::new("sccache").stdout(Stdio::null()).args(&["--help"]).spawn() {
	// Do nothing if sccache is already installed
	Ok(_) => (),

	// If sccache isnt installed, then install it
	Err(_) => {
		println!("Installing sccache...");
		Command::new("cargo").args(&["install", "sccache"]).spawn().unwrap();

	},
}
'''


[tasks.cargo-build-web-release]
args = ["build", "--target", "wasm32-unknown-unknown", "--features", "web", "--profile", "release-web", "-Z", "unstable-options"]
command = "cargo"
dependencies = ["install-target-wasm32-unknown-unknown", "sccache"]

[tasks.cargo-build-web-opt]
args = ["build", "--target", "wasm32-unknown-unknown", "--features", "web", "--profile", "opt-web", "-Z", "unstable-options"]
command = "cargo"
dependencies = ["install-target-wasm32-unknown-unknown", "sccache"]

[tasks.cargo-build-web-fast]
args = ["build", "--target", "wasm32-unknown-unknown", "--features", "web", "--profile", "fast-web", "-Z", "unstable-options"]
command = "cargo"
dependencies = ["install-target-wasm32-unknown-unknown", "sccache"]

[tasks.build-web-release]
args = ["--out-dir", "target/", "--out-name", "wasm", "--target", "web", "target/wasm32-unknown-unknown/release-web/game.wasm"]
command = "wasm-bindgen"
dependencies = ["cargo-build-web-release", "wasm-bindgen-cli"]

[tasks.build-web-opt]
args = ["--out-dir", "target/", "--out-name", "wasm", "--target", "web", "target/wasm32-unknown-unknown/opt-web/game.wasm"]
command = "wasm-bindgen"
dependencies = ["cargo-build-web-opt", "wasm-bindgen-cli"]

[tasks.build-web-fast]
args = ["--out-dir", "target/", "--out-name", "wasm", "--target", "web", "target/wasm32-unknown-unknown/fast-web/game.wasm"]
command = "wasm-bindgen"
dependencies = ["cargo-build-web-fast", "wasm-bindgen-cli"]

[tasks.build-native]
args = ["build", "--features", "native", "-Z", "unstable-options"]
command = "cargo"
dependencies = ["sccache"]

[tasks.build-native-release]
args = ["build", "--features", "native", "--release", "-Z", "unstable-options"]
command = "cargo"
dependencies = ["sccache"]

[tasks.build-native-fast]
args = ["build", "--features", "native", "--features", "bevy/dynamic", "-Z", "unstable-options"]
command = "cargo"
dependencies = ["sccache"]

[tasks.run]
args = ["run", "--features", "native", "--features", "bevy/dynamic", "-Z", "unstable-options"]
command = "cargo"
dependencies = ["sccache"]

[tasks.run-release]
command = "${CARGO_TARGET_DIR}/release/${CARGO_MAKE_BINARY_EXECUTABLE_NAME}"
dependencies = ["build-native-release", "sccache"]

[tasks.serve]
command = "basic-http-server"
dependencies = ["build-web-opt", "basic-http-server"]

[tasks.serve-release]
command = "basic-http-server"
dependencies = ["build-web-release", "basic-http-server"]

[tasks.serve-opt]
command = "basic-http-server"
dependencies = ["build-web-opt", "basic-http-server"]

[tasks.serve-fast]
command = "basic-http-server"
dependencies = ["build-web-fast", "basic-http-server"]

[tasks.check-native]
args = ["clippy", "--features", "native", "--", "-D", "warnings", "-Z", "unstable-options"]
command = "cargo"
dependencies = ["install-target-wasm32-unknown-unknown", "sccache"]

[tasks.check-web]
args = ["clippy", "--features", "web", "--target", "wasm32-unknown-unknown", "-Z", "unstable-options", "--", "-D", "warnings"]
command = "cargo"
dependencies = ["install-target-wasm32-unknown-unknown", "sccache"]

[tasks.check]
dependencies = ["check-web", "check-native"]

[tasks.serve-debug]
command = "basic-http-server"
dependencies = ["build-web-debug", "basic-http-server"]
