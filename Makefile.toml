[config]
# Skip loading of all core tasks which saves up a bit on toml parsing and task creation
# skip_core_tasks = true
# Skips loading Git related environment variables
skip_git_env_info = true
# Skips loading rust related environment variables
# skip_rust_env_info = true
# Skips loading the current crate related environment variables
skip_crate_env_info = true

[tasks.install-target-wasm32-unknown-unknown]
args = ["target", "install", "wasm32-unknown-unknown"]
command = "rustup"

[tasks.basic-http-server]
env = { RUSTFLAGS = "-Ctarget-cpu=native" }
install_crate = {crate_name = "basic-http-server", binary = "basic-http-server", test_arg="--help"}

[tasks.wasm-bindgen-cli]
env = { RUSTFLAGS = "-Ctarget-cpu=native" }
install_crate = {crate_name = "wasm-bindgen-cli", binary = "wasm-bindgen", test_arg="--help", min_version = "0.2.78"}

[tasks.install-compress_wasm]
env = { RUSTFLAGS="-Ctarget-cpu=native -Zstrip=symbols" }
args = ["install", "compress_wasm", "--path=tools/compress_wasm"]
command = "cargo"

[tasks.compress]
args = ["2"]
command = "compress_wasm"
dependencies = ["install-compress_wasm"]

[tasks.compress-release]
args = ["11"]
command = "compress_wasm"
dependencies = ["install-compress_wasm"]

[tasks.cargo-build-web-release-simd]
env = { "RUSTFLAGS" = "-Ctarget-feature=+simd128,+bulk-memory,+nontrapping-fptoint" }
args = ["build", "--target", "wasm32-unknown-unknown", "--bin", "game", "--features", "web,graphics", "--no-default-features", "--profile", "release-web-simd", "--features", "-Zunstable-options", "-Zbuild-std=panic_abort,std"]
command = "cargo"
dependencies = ["install-target-wasm32-unknown-unknown"]

[tasks.cargo-build-web-opt-simd]
env = { "RUSTFLAGS" = "-Ctarget-feature=+simd128,+bulk-memory,+nontrapping-fptoint" }
args = ["build", "--target", "wasm32-unknown-unknown", "--bin", "game", "--features", "web,graphics", "--no-default-features", "--profile", "opt-web-simd", "--features", "-Zunstable-options", "-Zbuild-std=panic_abort,std"]
command = "cargo"
dependencies = ["install-target-wasm32-unknown-unknown"]

[tasks.cargo-build-web-fast-simd]
env = { "RUSTFLAGS" = "-Ctarget-feature=+simd128,+bulk-memory,+nontrapping-fptoint" }
args = ["build", "--target", "wasm32-unknown-unknown", "--bin", "game", "--features", "web,graphics", "--no-default-features", "--profile", "fast-web-simd", "--features", "-Zunstable-options", "-Zbuild-std=panic_abort,std"]
command = "cargo"
dependencies = ["install-target-wasm32-unknown-unknown"]

[tasks.bindgen-release-simd]
args = ["--out-dir", "target/", "--out-name", "wasm-simd", "--target", "web", "target/wasm32-unknown-unknown/release-web-simd/game.wasm"]
command = "wasm-bindgen"
dependencies = ["cargo-build-web-release-simd", "wasm-bindgen-cli"]

[tasks.bindgen-opt-simd]
args = ["--out-dir", "target/", "--out-name", "wasm-simd", "--target", "web", "target/wasm32-unknown-unknown/opt-web-simd/game.wasm"]
command = "wasm-bindgen"
dependencies = ["cargo-build-web-opt-simd", "wasm-bindgen-cli"]

[tasks.bindgen-fast-simd]
args = ["--out-dir", "target/", "--out-name", "wasm-simd", "--target", "web", "target/wasm32-unknown-unknown/fast-web-simd/game.wasm"]
command = "wasm-bindgen"
dependencies = ["cargo-build-web-fast-simd", "wasm-bindgen-cli"]

[tasks.build-web-fast-simd]
dependencies = ["bindgen-fast-simd", "compress"]

[tasks.build-web-opt-simd]
dependencies = ["bindgen-opt-simd", "compress-release"]

[tasks.build-web-release-simd]
dependencies = ["bindgen-release-simd", "compress-release"]

[tasks.build-native]
args = ["build", "--features", "native,use_wgpu,graphics,bevy/dynamic", "--bin", "game", "--features", "-Z", "unstable-options"]
command = "cargo"

[tasks.build-windows]
env = { "RUSTFLAGS" = "-Ctarget-cpu=x86-64-v3 -Zstrip=symbols -Ctarget-feature=+crt-static" }
args = ["build", "--features", "native,use_wgpu,graphics,openssl/vendored", "--bin", "game", "--target", "x86_64-pc-windows-gnu", "--profile", "dev-windows"]
command = "cargo"

[tasks.build-native-release]
env = { "RUSTFLAGS" = "-Ctarget-cpu=x86-64-v3 -Zstrip=symbols -Clink-arg=-fuse-ld=lld" }
args = ["run", "--features", "native,use_wgpu,graphics", "--release", "--bin", "game", "--features", "-Z", "unstable-options"]
command = "cargo"

[tasks.run]
args = ["run", "--features", "native,use_wgpu,graphics,bevy/dynamic", "--bin", "game", "--features", "-Z", "unstable-options"]
command = "cargo"

[tasks.run-release]
command = "target/release/game"
dependencies = ["build-native-release"]

[tasks.serve-simd]
args = ["-a", "0.0.0.0:4000"]
command = "basic-http-server"
dependencies = ["build-web-opt-simd", "basic-http-server"]

[tasks.serve-release-simd]
args = ["-a", "0.0.0.0:4000"]
command = "basic-http-server"
dependencies = ["build-web-release-simd", "basic-http-server"]

[tasks.serve-opt-simd]
args = ["-a", "0.0.0.0:4000"]
command = "basic-http-server"
dependencies = ["build-web-opt-simd", "basic-http-server"]

[tasks.serve-fast-simd]
args = ["-a", "0.0.0.0:4000"]
command = "basic-http-server"
dependencies = ["build-web-fast-simd", "basic-http-server"]

[tasks.check-native]
args = ["clippy", "--features", "native,use_wgpu,graphics", "--bin", "game", "--", "-D", "warnings", "-Z", "unstable-options"]
command = "cargo"
dependencies = ["install-target-wasm32-unknown-unknown"]

[tasks.check-web]
args = ["clippy", "--features", "web,graphics", "--no-default-features", "--target", "wasm32-unknown-unknown", "--bin", "game", "-Z", "unstable-options", "--", "-D", "warnings"]
command = "cargo"
dependencies = ["install-target-wasm32-unknown-unknown"]

[tasks.check]
dependencies = ["check-web", "check-native"]

[tasks.build-server_cli]
args = ["build", "--bin", "server_cli", "--no-default-features", "--features", "native,bevy/dynamic", "--profile", "server_cli", "-Zunstable-options"]
command = "cargo"

[tasks.build-server_cli-release]
args = ["build", "--bin", "server_cli", "--no-default-features", "--features", "native", "--profile", "server_cli-release", "-Zunstable-options"]
command = "cargo"

[tasks.server_cli]
args = ["run", "--bin", "server_cli", "--no-default-features", "--features", "native,bevy/dynamic", "--profile", "server_cli", "-Zunstable-options"]
command = "cargo"

[tasks.server_cli-release]
args = ["run", "--bin", "server_cli", "--no-default-features", "--features", "native", "--profile", "server_cli-release", "-Zunstable-options"]
command = "cargo"
