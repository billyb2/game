[env]
CARGO_TARGET_DIR = {value = "target", condition = {env_not_set = ["CARGO_TARGET_DIR"]}}
CARGO_WASM_PATH = "${CARGO_TARGET_DIR}/wasm32-unknown-unknown/release/${CARGO_MAKE_CRATE_NAME}.wasm"
CARGO_PROFILE = "dev"
TARGET_DIR = "target"
CARGO_MANIFEST_DIR = "${CARGO_MAKE_WORKING_DIRECTORY}"

[tasks.install-target-wasm32-unknown-unknown]
args = ["target", "install", "wasm32-unknown-unknown"]
command = "rustup"

[tasks.basic-http-server]
install_crate = {crate_name = "basic-http-server", binary = "basic-http-server", test_arg="--help"}

[tasks.wasm-bindgen-cli]
install_crate = {crate_name = "wasm-bindgen-cli", binary = "wasm-bindgen", test_arg="--help", min_version = "0.2.76"}

[tasks.lz4_flex-util]
install_crate = { crate_name = "lz4_flex-util", binary = "lz4_flex-util", test_arg = "--help" }

[tasks.compress]
args = ["-f", "target/wasm-simd_bg.wasm"]
command = "lz4"
dependencies = ["lz4_flex-util"]

[tasks.cargo-build-web-release]
args = ["build", "--target", "wasm32-unknown-unknown", "--bin", "game", "--features", "web", "--no-default-features", "--profile", "release-web", "-Zunstable-options", "-Zbuild-std=panic_abort,std"]
command = "cargo"
dependencies = ["install-target-wasm32-unknown-unknown"]

[tasks.cargo-build-web-opt]
args = ["build", "--target", "wasm32-unknown-unknown", "--bin", "game", "--features", "web", "--no-default-features", "--profile", "opt-web", "-Zunstable-options", "-Zbuild-std=panic_abort,std"]
command = "cargo"
dependencies = ["install-target-wasm32-unknown-unknown"]

[tasks.cargo-build-web-fast]
args = ["build", "--target", "wasm32-unknown-unknown", "--bin", "game", "--features", "web", "--no-default-features", "--profile", "fast-web", "-Zunstable-options", "-Zbuild-std=panic_abort,std"]
command = "cargo"
dependencies = ["install-target-wasm32-unknown-unknown"]

[tasks.cargo-build-web-release-simd]
env = { "RUSTFLAGS" = "-Ctarget-feature=+simd128,+bulk-memory,+nontrapping-fptoint" }
args = ["build", "--target", "wasm32-unknown-unknown", "--bin", "game", "--features", "web", "--no-default-features", "--profile", "release-web-simd", "--features", "rand/simd_support", "-Zunstable-options", "-Zbuild-std=panic_abort,std"]
command = "cargo"
dependencies = ["install-target-wasm32-unknown-unknown"]

[tasks.cargo-build-web-opt-simd]
env = { "RUSTFLAGS" = "-Ctarget-feature=+simd128,+bulk-memory,+nontrapping-fptoint" }
args = ["build", "--target", "wasm32-unknown-unknown", "--bin", "game", "--features", "web", "--no-default-features", "--profile", "opt-web-simd", "--features", "rand/simd_support", "-Zunstable-options", "-Zbuild-std=panic_abort,std"]
command = "cargo"
dependencies = ["install-target-wasm32-unknown-unknown"]

[tasks.cargo-build-web-fast-simd]
env = { "RUSTFLAGS" = "-Ctarget-feature=+simd128,+bulk-memory,+nontrapping-fptoint" }
args = ["build", "--target", "wasm32-unknown-unknown", "--bin", "game", "--features", "web", "--no-default-features", "--profile", "fast-web-simd", "--features", "rand/simd_support", "-Zunstable-options", "-Zbuild-std=panic_abort,std"]
command = "cargo"
dependencies = ["install-target-wasm32-unknown-unknown"]

[tasks.bindgen-release]
args = ["--out-dir", "target/", "--out-name", "wasm", "--target", "web", "target/wasm32-unknown-unknown/release-web/game.wasm"]
command = "wasm-bindgen"
dependencies = ["cargo-build-web-release", "wasm-bindgen-cli"]

[tasks.bindgen-opt]
args = ["--out-dir", "target/", "--out-name", "wasm", "--target", "web", "target/wasm32-unknown-unknown/opt-web/game.wasm"]
command = "wasm-bindgen"
dependencies = ["cargo-build-web-opt", "wasm-bindgen-cli"]

[tasks.bindgen-fast]
args = ["--out-dir", "target/", "--out-name", "wasm", "--target", "web", "target/wasm32-unknown-unknown/fast-web/game.wasm"]
command = "wasm-bindgen"
dependencies = ["cargo-build-web-fast", "wasm-bindgen-cli"]

[tasks.bindgen-release-simd]
args = ["--out-dir", "target/", "--out-name", "wasm-simd", "--target", "web", "target/wasm32-unknown-unknown/release-web-simd/game.wasm"]
command = "wasm-bindgen"
dependencies = ["cargo-build-web-release-simd", "wasm-bindgen-cli"]

[tasks.bindgen-opt-simd]
args = ["--out-dir", "target/", "--out-name", "wasm-simd", "--target", "web", "target/wasm32-unknown-unknown/opt-web-simd/game.wasm"]
command = "wasm-bindgen"
dependencies = ["cargo-build-web-opt-simd", "wasm-bindgen-cli"]

[tasks.bindgen-fast-simd]
args = ["--out-dir", "target/", "--out-name", "wasm-simd", "--target", "web", "target/wasm32-unknown-unknown/fast-web-simd/game.wasm"]
command = "wasm-bindgen"
dependencies = ["cargo-build-web-fast-simd", "wasm-bindgen-cli"]

[tasks.build-web-fast-simd]
dependencies = ["bindgen-fast-simd", "compress"]

[tasks.build-web-opt-simd]
dependencies = ["bindgen-opt-simd", "compress"]

[tasks.build-web-release-simd]
dependencies = ["bindgen-fast-simd", "compress"]

[tasks.build-web-fast]
dependencies = ["bindgen-fast", "compress"]

[tasks.build-web-opt]
dependencies = ["bindgen-opt", "compress"]

[tasks.build-web-release]
dependencies = ["bindgen-release", "compress"]

[tasks.build-native]
args = ["build", "--features", "native,use_wgpu,graphics", "--bin", "game", "-Z", "unstable-options"]
command = "cargo"

[tasks.build-native-release]
args = ["build", "--features", "native,use_wgpu,graphics", "--bin", "game", "--release", "-Z", "unstable-options"]
command = "cargo"

[tasks.build-native-fast]
args = ["build", "--features", "native,use_wgpu,graphics", "--bin", "game", "--features", "bevy/dynamic", "-Z", "unstable-options"]
command = "cargo"

[tasks.run]
args = ["run", "--features", "native,use_wgpu,graphics", "--bin", "game", "--features", "bevy/dynamic", "-Z", "unstable-options"]
command = "cargo"

[tasks.run-release]
command = "${CARGO_TARGET_DIR}/release/${CARGO_MAKE_BINARY_EXECUTABLE_NAME}"
dependencies = ["build-native-release"]

[tasks.serve]
command = "basic-http-server"
dependencies = ["build-web-opt", "build-web-opt-simd", "basic-http-server"]

[tasks.serve-simd]
command = "basic-http-server"
dependencies = ["build-web-opt-simd", "basic-http-server"]

[tasks.serve-release]
command = "basic-http-server"
dependencies = ["build-web-release", "build-web-release-simd", "basic-http-server"]

[tasks.serve-release-simd]
command = "basic-http-server"
dependencies = ["build-web-release-simd", "basic-http-server"]

[tasks.serve-opt]
command = "basic-http-server"
dependencies = ["build-web-opt", "build-web-opt-simd", "basic-http-server"]

[tasks.serve-opt-simd]
command = "basic-http-server"
dependencies = ["build-web-opt-simd", "basic-http-server"]

[tasks.serve-fast]
command = "basic-http-server"
dependencies = ["build-web-fast", "build-web-fast-simd", "basic-http-server"]

[tasks.serve-fast-simd]
command = "basic-http-server"
dependencies = ["build-web-fast-simd", "basic-http-server"]

[tasks.check-native]
args = ["clippy", "--features", "native,use_wgpu,graphics", "--bin", "game", "--", "-D", "warnings", "-Z", "unstable-options"]
command = "cargo"
dependencies = ["install-target-wasm32-unknown-unknown"]

[tasks.check-web]
args = ["clippy", "--features", "web", "--no-default-features", "--target", "wasm32-unknown-unknown", "--bin", "game", "-Z", "unstable-options", "--", "-D", "warnings"]
command = "cargo"
dependencies = ["install-target-wasm32-unknown-unknown"]

[tasks.check]
dependencies = ["check-web", "check-native"]

[tasks.server_cli]
args = ["run", "--bin", "server_cli", "--no-default-features", "--features", "native"]
command = "cargo"

[tasks.server_cli-release]
args = ["run", "--bin", "server_cli", "--no-default-features", "--features", "native", "--release"]
command = "cargo"
